/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Tech developers (https://sketchfab.com/Deepu.Dra)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/quad-bike-3d-aa9d465112c8419a832f204e0d97fa52
title: Quad Bike 3d
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { Vector3 } from "three";
import useKeyboard from "../hooks/useKeyboardControls";

let rotateAngle;
let rotateVector = new Vector3(0, 1, 0);

export function MonsterCar(props) {
  const { nodes, materials } = useGLTF("/assets/quad_bike_3d.glb");
  const { forward, backward, left, right } = useKeyboard();
  const ref = useRef();

  useFrame((_, delta) => {
    rotateAngle = (Math.PI / 2) * delta;

    if (forward) {
      ref.current.translateZ(2 * delta);
    }
    if (backward) {
      ref.current.translateZ(-2 * delta);
    }
    if (left) {
      ref.current.rotateOnAxis(rotateVector, rotateAngle);
    }
    if (right) {
      ref.current.rotateOnAxis(rotateVector, -rotateAngle);
    }
  });

  return (
    <group ref={ref} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group
            position={[0.02, -0.07, -0.05]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={0.5}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes["Body_Material_#28_0"].geometry}
              material={materials.Material_28}
            />
          </group>
          <group
            position={[0.02, -0.07, -0.05]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={0.5}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes["Parts_Material_#28_0"].geometry}
              material={materials.Material_28}
            />
          </group>
          <group
            position={[0.02, -0.07, -0.05]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={0.5}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes["Lights_Material_#29_0"].geometry}
              material={materials.Material_29}
            />
          </group>
          <group
            position={[0.02, -0.07, -0.05]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={0.5}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes["Wheel_Material_#28_0"].geometry}
              material={materials.Material_28}
            />
          </group>
          <group
            position={[0.02, -0.07, -0.05]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={0.5}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes["Handle_Material_#28_0"].geometry}
              material={materials.Material_28}
            />
          </group>
          <group
            position={[0.02, -0.07, -0.05]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={0.5}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes["Lights2_Material_#29_0"].geometry}
              material={materials.Material_29}
            />
          </group>
          <group
            position={[0.02, -0.07, -0.05]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={0.5}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes["Wheel2_Material_#28_0"].geometry}
              material={materials.Material_28}
            />
          </group>
          <group
            position={[0.02, -0.07, -0.05]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={0.5}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes["Wheel3_Material_#28_0"].geometry}
              material={materials.Material_28}
            />
          </group>
          <group
            position={[0.02, -0.07, -0.05]}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={0.5}
          >
            <mesh
              castShadow
              receiveShadow
              geometry={nodes["Wheel4_Material_#28_0"].geometry}
              material={materials.Material_28}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/quad_bike_3d.glb");
